<html>
    <head>
        <meta http-equiv="content-type" content="text/html; charset=UTF8">
        <title>OFX Editor</title>
        <link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap.css') }}">
    		<link rel="stylesheet" type="text/css" href="{{ url_for('static', filename='css/bootstrap-theme.css') }}">
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/jquery.min.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/bootstrap.min.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/d3.min.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/variables.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/events.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/editorUtils.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/editorInclude.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/wire.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/process.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/control.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/controlWire.js') }}"></script>
    		<!-- <script language="javascript" type="text/javascript" src="/js/processEditor.js"></script> -->
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/component.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/effectDrawingArea.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/sidebar.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/menubar.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/cord.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/effect.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/effectEditor.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/combo.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/values.js') }}"></script>
    		<script language="javascript" type="text/javascript" src="{{ url_for('static', filename='js/updates.js') }}"></script>


        <script>
                   /* var txBlock = new Array(100);
                    var rxBlock = new Array(500);
                    var activeMod = '';
                    var xferCount = 0;
                    var comboArray = new Array;
                    var componentArray = new Array;
                    var componentMap = {};

                    var combo;

                    var processTypeCount = {};
                    function clearAll()
                    {
                    routing.style.display = 'none';
                    }

                    var currentData;*/


        </script>

    </head>
    <body onload="main()">
        <!--  Place plugin GUI code here --->
        <input type="hidden" id="compArray" value="{{ json_component_list }}" />
        <div class="container" style="border: 1px solid; height:730px; width:1200px">
            <div id="menubar" class="row"> <!--  <div id="menubar" class="row"> --->
                <div id="statusBox" class="col-md-2"></div><!-- <div class="col-sm-2">  --->
                <div class="col-md-6 navbar-inverse" style="border: 1px solid;"><!-- <div class="col-sm-10 navbar-inverse" style="border: 1px solid;">  --->
                    <ul class="nav navbar-nav">
                        <li id="newComboListItem"><a href="#" id="newCombo" onclick="newCombo();" style="color:white;font-weight:bold">New Combo</a></li>
                        <li class="dropdown" id="loadComboListItem">
                            <a href="#" id="loadComboLink" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"  style="color:white;font-weight:bold">Load Combo<span class="caret"></span></a>
                            <ul class="dropdown-menu" id="comboMenu">
                                <!--*********** use ajax here ***********-->
                            </ul>
                        </li>
                        <li id="saveComboListItem"><a href="#" onclick="saveCombo();" style="color:white;font-weight:bold">Save Combo</a></li>
                        <li id="deleteComboListItem"><a href="#" onclick="deleteCombo();" style="color:white;font-weight:bold">Delete Combo</a>
                        </li>
                        <li id="cpuPowerRequirementIndicatorListItem">

                        </li>
                    </ul>
                </div>
                <div id="cpuPowerRequirementIndicatorDiv"></div>

            </div> <!--  End of menubar --->
            <div id="sidebar_effectDrawingArea_Editor" class="row"><!--  <div id="sidebar_effectDrawingAreaProcessEditor" class="row"> --->
                <div id="sidebar" class="col-sm-2 navbar-inverse"
                     style="border: 1px solid;overflow-y:auto;overflow-x:hidden;height:680px"><!-- <div id="sidebar" class="col-sm-2 navbar-inverse"
                     style="border: 1px solid;overflow-y:auto;overflow-x:hidden;height:600px">  --->
                    <ul class="nav sidebar-nav" id="componentList">
                        <!--*********** use ajax here ***********-->
                    </ul>
                </div><!-- sidebar -->
                <div id="effectDrawingArea_Editor"  class="col-sm-10"  style="border: 1px solid;height:680px;" x="0" y="0" ><!-- <div id="effectDrawingArea_effectEditor"  class="col-sm-10" style="border: 1px solid;" x="0" y="0">  --->
                    <div id="effectDrawingArea" class="row" style="border: 1px solid;"><!--  <div id="effectDrawingArea" class="row"> --->
						<div class="col-sm-12">
	                        <div id="effectDrawingAreaTabGroupDiv" class="row" style="border: 1px solid;">
	                            <ul id="effectDrawingAreaTabGroupUL" class="nav nav-tabs col-sm-12">
	                            </ul>

	                        </div>
	                        <div id="effectDrawingAreaCanvas" class="row">
		                    	<div id="comboDrawingAreaCanvas" class="col-sm-12">

		                        </div>
		                    	<div id="effectDrawingAreaCanvas_0" class="col-sm-12">

		                        </div>
		                    	<div id="effectDrawingAreaCanvas_1" class="col-sm-12">

		                        </div>
		                    	<div id="effectDrawingAreaCanvas_2" class="col-sm-12">

		                        </div>

	                        </div>
							<div id="effectTabEditor" style="display:none" class="row">
								<h3>Effect Name Editor</h3>
								<input id="oldEffectName" type="hidden">
								<input id="oldEffectAbbr" type="hidden">
								<input id="newEffectName" type="text">
								<input id="newEffectAbbr" type="text">
								<input type="button" value="OK" onclick="changeEffectNameAbbr();">
								<input type="button" value="Cancel" onclick="hideEffectTabEditor();">

							</div>
							<div id="comboTabEditor" style="display:none" class="row">
								<h3>Combo Name Editor</h3>
								<input id="oldComboName" type="hidden">
								<input id="newComboName" type="text">
								<input type="button" value="OK" onclick="changeComboName();">
								<input type="button" value="Cancel" onclick="hideComboTabEditor();">

							</div>

						</div>

                    </div>   <!--effectDrawingArea -->

                    <div id="effectEditorArea" style="border: 1px solid;"><!-- <div id="effectEditorArea" class="row" style="border: 1px solid;">  --->


                        <div id="effectEditorTabGroup" style="overflow-x:auto;overflow-y:hidden">
                            <ul id="effectEditorTabGroupDiv" class="nav nav-tabs"></ul>

                        </div>
                        <div class="col-sm-12" style="overflow-y:auto;overflow-x:hidden;height:250px"><!-- <div class="col-md-11">  --->

                            <div id="effectEditorForm" ><!-- <div id="effectEditorForm" class="row" style="overflow-y:auto;overflow-x:hidden;height:150px">  --->

                            </div>
                        </div>
                    </div>
                </div>
                <script>
                            function inspect(obj) {
                            var str = new Array();
                                    var element = null;
                                    for (element in obj) { str[str.length] = element; }
                            str.sort();
                                    alert(obj + ":" + str.join(' '));
                            }

                    sidebarSvg = d3.select("#sidebar")
                            .append("svg")
                            .attr("id", "sidebarSvg");
                            //.attr("width", 150)
                            //.attr("height", 900);

                    /*var effectDrawingAreaSvg = [];
                    var effectIndex = 0;*/

                    comboDrawingAreaSvg = d3.select("#comboDrawingAreaCanvas")
                            .append("svg")
                            .attr("id", "comboDrawingAreaSvg");
                            //.attr("width", 1000)
                            //.attr("height", 400);

                    effectDrawingAreaSvg[0] = d3.select("#effectDrawingAreaCanvas_0")
                            .append("svg")
                            .attr("id", "effectDrawingAreaSvg_0")
                            //.attr("width", 1000)
                            //.attr("height", 400)
                            .on("mouseup", effectDrawingAreaMouseUp)
                            .on("mousemove", effectDrawingAreaMouseMove);

                    effectDrawingAreaSvg[1] = d3.select("#effectDrawingAreaCanvas_1")
                            .append("svg")
                            .attr("id", "effectDrawingAreaSvg_1")
                            //.attr("width", 1000)
                            //.attr("height", 400)
                            .on("mouseup", effectDrawingAreaMouseUp)
                            .on("mousemove", effectDrawingAreaMouseMove);

                    effectDrawingAreaSvg[2] = d3.select("#effectDrawingAreaCanvas_2")
                            .append("svg")
                            .attr("id", "effectDrawingAreaSvg_2")
                            //.attr("width", 1000)
                            //.attr("height", 400)
                            .on("mouseup", effectDrawingAreaMouseUp)
                            .on("mousemove", effectDrawingAreaMouseMove);

					//var effectIO = [];

                  	/*var effectIoJson = {
                  		"outputMap": [{"name":"output1", "x":20, "y":160},{"name":"output2", "x":20, "y":240}],
                 		"name": "none",
                 		"inputMap": [{"name":"input1", "x":900, "y":160},{"name":"input2", "x":900, "y":240}],
                   		};*/

                  	/*effectIO[0] = new Process(effectDrawingAreaSvg[0], effectIoJson);
                  	effectIO[1] = new Process(effectDrawingAreaSvg[1], effectIoJson);
                  	effectIO[2] = new Process(effectDrawingAreaSvg[2], effectIoJson);       */



                   	/*var systemIoJson = {
                  		"outputMap": [{"name":"capture_1", "x":20, "y":160},{"name":"capture_2", "x":20, "y":240}],
                 		"name": "system",
                 		"inputMap": [{"name":"playback_1", "x":900, "y":160},{"name":"playback_2", "x":900, "y":240}],
                   		};
                  	var systemIO = new Process(effectDrawingAreaSvg_0, systemIoJson);       */



                            /*var dummy = {"name":"none", "x":0, "y":0};
                            var effectDrawingAreaDraggingElement = null; /* = {"__data__":{"x":0, "y":0, "poly":"0,0 0,0 0,0 0,0","name":null,
                             "inputs":[{"index":0, "name":"input1", "x":-30, "y":5},{"index":1, "name":"input2", "x":-30, "y":25}],
                             "outputs":[{"index":0, "name":"output1", "x":50, "y":5},{"index":1, "name":"output2", "x":50, "y":25}]},
                             "attributes":{"dragx":0,"dragy":0}}*/

                           /* var effectDrawingAreaMouseOverSymbol = 0;
                            var effectDrawingAreaMouseOverInputConnector = 0;
                            var effectDrawingAreaMouseOverOutputConnector = 0;
                            var effectDrawingAreaMouseClickConnector = {"component":0, "type":0, "index":0};
                            //change flags
                            var newProcessAdded = 0;
                            var processRemoved = 0;
                            var newConnectionAdded = 0;
                            var connectionRemoved = 0;
                            var newComboLoaded = 0;
                            var effectDrawingAreaChange = 0;
                            var effectProcessArrayUpdated = 0;
                            var effectProcessConnectionArrayUpdated = 0;
                            var currentEffect = "";
                            var currentCombo = "";
                            var mouseInSidebar = 0;
                            var mouseInDrawingArea = 0;
                            var sidebarDraggingElement = null;
                            var sidebarMouseOverSymbol = 0;
                            var newProcess = null;
                            var newProcessConnection = null;
                            var mouseOverProcess = null;
                            var nMouseOffsetX = 0;
                            var nMouseOffsetY = 0;
                            var wait = 0;
                            var totalCpuPowerRequired = 0;
                            var clickedConnector = {"process":"", "port":"", "type":"", "index":0};
                            var newConnection = {}; //{"srcPortIndex":0,"srcProcess":null,"destPortIndex":0,"destProcess":null}; // set components to 255 to indicate unset
   							*/
                            effectEditorArea = document.getElementById("effectEditorArea");

                            /*var comboInput = [];
                            comboInput[0] = new Connector(effectDrawingAreaSvg, "system", "capture_1", "output", 20, 160);
                            comboInput[1] = new Connector(effectDrawingAreaSvg, "system", "capture_2", "output", 20, 240);

                            var comboOutput = [];
                            comboOutput[0] = new Connector(effectDrawingAreaSvg, "system", "playback_1", "input", 900, 160);
                            comboOutput[1] = new Connector(effectDrawingAreaSvg, "system", "playback_2", "input", 900, 240);*/




                            function main()
                            {
                            //initDrawingAreaDraggingElement();
                            effectDrawingAreaChange = 1;
                                    sidebarInit();
                                    initMenubar();

                                    effectDrawingAreaInit();
                                    effectEditorInit();//processEditorInit();
                                    setInterval(updateData, updateIntervalTime);

                            }
                </script>

                <script>

                </script>
                <!--  End of plugin GUI code --->
            </div> <!--  End of sidebar_effectDrawingAreaProcessEditor  --->
        </div> <!--  End of container --->
    </body>
</html>
